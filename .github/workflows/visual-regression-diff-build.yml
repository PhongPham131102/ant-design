# Each PR will build preview site that help to check code is work as expect.

name: ðŸ‘€ Visual Regression Diff Build

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]

# Cancel prev CI if new commit come
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  # Prepare node modules. Reuse cache if available
  setup:
    name: prepare node_modules
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: cache package-lock.json
        uses: actions/cache@v3
        with:
          path: package-temp-dir
          key: lock-${{ github.sha }}

      - name: create package-lock.json
        run: npm i --package-lock-only --ignore-scripts

      - name: hack for single file
        run: |
          if [ ! -d "package-temp-dir" ]; then
            mkdir package-temp-dir
          fi
          cp package-lock.json package-temp-dir
      - name: cache node_modules
        id: node_modules_cache_id
        uses: actions/cache@v3
        with:
          path: node_modules
          key: node_modules-${{ hashFiles('**/package-temp-dir/package-lock.json') }}

      - name: install
        if: steps.node_modules_cache_id.outputs.cache-hit != 'true'
        run: npm ci

  test-image:
    name: test image
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: restore cache from package-lock.json
        uses: actions/cache@v3
        with:
          path: package-temp-dir
          key: lock-${{ github.sha }}

      - name: restore cache from node_modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: node_modules-${{ hashFiles('**/package-temp-dir/package-lock.json') }}

      - name: generate image snapshots
        id: test-image
        run: |
          node node_modules/puppeteer/install.mjs
          npm run version
          npm run test-image
          tar -czvf imageSnapshots.tar.gz imageSnapshots/*
        env:
          NODE_OPTIONS: "--max_old_space_size=4096"

      - name: download image snapshots from latest master
        run: |
          wget -O antd-image-snapshots-master.zip https://github.com/ant-design/antd-image-snapshots/archive/refs/heads/main.zip
          unzip antd-image-snapshots-master.zip
          mv antd-image-snapshots-main/imageSnapshots ./imageSnapshots-master
          mv antd-image-snapshots-main/visual-regression-ref.txt ./imageSnapshots-master

      # Execute visual regression diff task
      - name: visual regression diff
        run: npm run visual-regression

      - name: upload report artifact
        uses: actions/upload-artifact@v3
        with:
          name: visual-regression-report
          path: ./visual-regression-report.md
